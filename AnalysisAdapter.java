/* This file was generated by SableCC (http://www.sablecc.org/). */

package decaf.analysis;

import java.util.*;
import decaf.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgram(AProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFloatType(AFloatType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaration(ADeclaration node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentlist(AIdentlist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADclStmt(ADclStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStmtNoTrlrStmt(AStmtNoTrlrStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfStStmt(AIfStStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfElseStStmt(AIfElseStStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileStStmt(AWhileStStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAForStStmt(AForStStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUntilStStmt(AUntilStStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADoWhileStStmt(ADoWhileStStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStmtNoTrlrStmtNoShortIf(AStmtNoTrlrStmtNoShortIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfElseNoShortStmtNoShortIf(AIfElseNoShortStmtNoShortIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileNoShortStmtNoShortIf(AWhileNoShortStmtNoShortIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAForNoShortStmtNoShortIf(AForNoShortStmtNoShortIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompoundStmtNoTrailer(ACompoundStmtNoTrailer node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANullStmtNoTrailer(ANullStmtNoTrailer node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssignStmtNoTrailer(AAssignStmtNoTrailer node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultassignStmtNoTrailer(AMultassignStmtNoTrailer node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusassignStmtNoTrailer(APlusassignStmtNoTrailer node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssignStmt(AAssignStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultassignStmt(AMultassignStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusassignStmt(APlusassignStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAForStmt(AForStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAForStmtNoShortIf(AForStmtNoShortIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileStmt(AWhileStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileStmtNoShortIf(AWhileStmtNoShortIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfStmt(AIfStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfElseStmt(AIfElseStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfElseStmtNoShortIf(AIfElseStmtNoShortIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUntilStmt(AUntilStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADoWhileStmt(ADoWhileStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompoundStmt(ACompoundStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolExpr(ABoolExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssnExpr(AAssnExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARvalExpr(ARvalExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultassnExpr(AMultassnExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusassnExpr(APlusassnExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssignExpr(AAssignExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultassignExpr(AMultassignExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusassignExpr(APlusassignExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusRvalue(APlusRvalue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinusRvalue(AMinusRvalue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermRvalue(ATermRvalue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultTerm(AMultTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivTerm(ADivTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFacTerm(AFacTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParsFactor(AParsFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUplusFactor(AUplusFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAUminusFactor(AUminusFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdFactor(AIdFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumFactor(ANumFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComment1(TComment1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComment2(TComment2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComment3(TComment3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComment4(TComment4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSpace(TSpace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTClas(TClas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPublic(TPublic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStatic(TStatic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMain(TMain node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloat(TFloat node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFor(TFor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAssign(TAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDo(TDo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTUntil(TUntil node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCompare(TCompare node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMultassign(TMultassign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlusassign(TPlusassign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMisc(TMisc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
