/* This file was generated by SableCC (http://www.sablecc.org/). */

package decaf.node;

import decaf.analysis.*;

@SuppressWarnings("nls")
public final class APlusassignStmtNoTrailer extends PStmtNoTrailer
{
    private PPlusassignStmt _plusassignStmt_;

    public APlusassignStmtNoTrailer()
    {
        // Constructor
    }

    public APlusassignStmtNoTrailer(
        @SuppressWarnings("hiding") PPlusassignStmt _plusassignStmt_)
    {
        // Constructor
        setPlusassignStmt(_plusassignStmt_);

    }

    @Override
    public Object clone()
    {
        return new APlusassignStmtNoTrailer(
            cloneNode(this._plusassignStmt_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPlusassignStmtNoTrailer(this);
    }

    public PPlusassignStmt getPlusassignStmt()
    {
        return this._plusassignStmt_;
    }

    public void setPlusassignStmt(PPlusassignStmt node)
    {
        if(this._plusassignStmt_ != null)
        {
            this._plusassignStmt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plusassignStmt_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._plusassignStmt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._plusassignStmt_ == child)
        {
            this._plusassignStmt_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._plusassignStmt_ == oldChild)
        {
            setPlusassignStmt((PPlusassignStmt) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
