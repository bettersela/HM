/* This file was generated by SableCC (http://www.sablecc.org/). */

package decaf.node;

import decaf.analysis.*;

@SuppressWarnings("nls")
public final class AMultassignStmtNoTrailer extends PStmtNoTrailer
{
    private PMultassignStmt _multassignStmt_;

    public AMultassignStmtNoTrailer()
    {
        // Constructor
    }

    public AMultassignStmtNoTrailer(
        @SuppressWarnings("hiding") PMultassignStmt _multassignStmt_)
    {
        // Constructor
        setMultassignStmt(_multassignStmt_);

    }

    @Override
    public Object clone()
    {
        return new AMultassignStmtNoTrailer(
            cloneNode(this._multassignStmt_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultassignStmtNoTrailer(this);
    }

    public PMultassignStmt getMultassignStmt()
    {
        return this._multassignStmt_;
    }

    public void setMultassignStmt(PMultassignStmt node)
    {
        if(this._multassignStmt_ != null)
        {
            this._multassignStmt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._multassignStmt_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._multassignStmt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._multassignStmt_ == child)
        {
            this._multassignStmt_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._multassignStmt_ == oldChild)
        {
            setMultassignStmt((PMultassignStmt) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
